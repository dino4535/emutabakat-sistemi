version: '3.8'

services:
  # Redis Cache & Celery Broker
  redis:
    image: redis:7-alpine
    container_name: emutabakat-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-emutabakat2025}
    volumes:
      - redis_data:/data
    networks:
      - emutabakat-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: emutabakat-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-emutabakat2025}
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/2
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - SMTP_FROM_NAME=E-Mutabakat Sistemi
    volumes:
      - ./fonts:/app/fonts
      - ./certificates:/app/certificates
      - ./uploads:/app/uploads
      - ./pdfs:/app/pdfs
      - backend_logs:/app/logs
    depends_on:
      - redis
    networks:
      - emutabakat-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: emutabakat-celery-worker
    restart: unless-stopped
    command: celery -A backend.celery_app worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-emutabakat2025}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/2
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
    volumes:
      - ./fonts:/app/fonts
      - ./certificates:/app/certificates
      - ./uploads:/app/uploads
      - ./pdfs:/app/pdfs
      - worker_logs:/app/logs
    depends_on:
      - redis
      - backend
    networks:
      - emutabakat-network

  # Celery Beat (Scheduled Tasks)
  celery-beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: emutabakat-celery-beat
    restart: unless-stopped
    command: celery -A backend.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-emutabakat2025}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/2
    volumes:
      - beat_logs:/app/logs
    depends_on:
      - redis
      - backend
    networks:
      - emutabakat-network

  # Flower (Celery Monitoring) - Opsiyonel
  flower:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: emutabakat-flower
    restart: unless-stopped
    command: celery -A backend.celery_app flower --port=5555
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-emutabakat2025}@redis:6379/2
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin2025}
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    networks:
      - emutabakat-network

  # Frontend React + Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: emutabakat-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - emutabakat-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  emutabakat-network:
    driver: bridge

volumes:
  redis_data:
  backend_logs:
  worker_logs:
  beat_logs:

